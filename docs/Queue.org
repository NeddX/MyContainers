#+title: The Queue Class
#+author: Neddidenrohu

* Queue<T> in my
** Overview
Defined in the =Queue.h= header.
-----
Based on the =my::Vec<T>= class, the =my::Queue<T>= class contains sub-set of the features provided by =my::Vec<T>= to provide the functionality of a FIFO container.

Just like the Vector class, the Queue class also fully supports move semantics thus expects its elements to have implemented move semantics as well.

** Constructors
- =my::Queue<T>()=: The default constructor for the =my::Queue<T>= class. It performs no allocations.
- =my::Queue<T>(usize size)=: Construct a queue with a predefined size.
- =my::Queue<T>(std::initializer_list<T>)=: Construct a queue based on an =std::initializer_list<T>=.

** Public member functions
- =my::Queue<T>::Size() -> usize=: Returns the current size of the queue.
- =my::Queue<T>::Empty() -> bool=: Returns whenever the queue is empty or not.
- =my::Queue<T>::Push(T)=: Push an element at the end of the queue.
- =my::Queue<T>::Pop() -> T=: Pop the last element and return it.
- =my::Queue<T>::Front() -> T&=: Return a reference to the first element.
- =my::Queue<T>::Swap(my::Queue<T>&)=: Swap the two queues.

** Member operators
- =my::Queue<T>::operator<<(std::ostream&, my::Queue<T>&) -> std::ostream&:= Stream insertion operator, useful for streaming and serialization or just =std::cout=-ing the queue.
